{"version":3,"sources":["components/Good/Good.js","components/Goodslist/Goodslist.js","App.js","index.js"],"names":["Good","good","Goodslist","state","listOfGoods","props","list","minLength","reverseSort","setState","prevState","reverse","alphabeticallySort","sort","resetSort","lengthSort","a","b","length","selectedLength","event","value","target","currentList","filter","item","this","className","type","onClick","onChange","map","key","React","Component","defaultProps","goodsFromServer","App","isStarted","handleStart","ReactDOM","render","document","getElementById"],"mappings":"wQAaeA,EAVF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,4BACGA,ICACC,G,iNACJC,MAAQ,CACNC,YAAY,YAAK,EAAKC,MAAMC,MAC5BC,UAAW,G,EAGbC,YAAc,WACZ,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BN,YAAaM,EAAUN,YAAYO,e,EAIvCC,mBAAqB,WACnB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BN,YAAaM,EAAUN,YAAYS,Y,EAIvCC,UAAY,WACV,EAAKL,SAAS,CACZL,YAAY,YAAK,EAAKC,MAAMC,MAC5BC,UAAW,K,EAIfQ,WAAa,WACX,EAAKN,UAAS,SAAAC,GAAS,MAAK,CAC1BN,YAAaM,EAAUN,YAAYS,MAAK,SAACG,EAAGC,GAAJ,OACtCD,EAAEE,OAASD,EAAEC,e,EAKnBC,eAAiB,SAACC,GAAW,IACnBC,EAAUD,EAAME,OAAhBD,MACFE,EAAW,YAAO,EAAKlB,MAAMC,MAEnC,EAAKG,UAAS,SAAAC,GAAS,MAAK,CAC1BN,YAAamB,EAAYC,QAAO,SAAAC,GAAI,OAAIA,EAAKP,QAAUG,KACvDd,UAAWc,O,wEAIL,IAAD,EAC4BK,KAAKvB,MAAhCC,EADD,EACCA,YAAaG,EADd,EACcA,UAErB,OACE,oCACE,6BACE,4BACEoB,UAAU,SACVC,KAAK,SACLC,QAASH,KAAKlB,aAHhB,WAOA,4BACEmB,UAAU,SACVC,KAAK,SACLC,QAASH,KAAKd,oBAHhB,uBAOA,4BACEe,UAAU,SACVC,KAAK,SACLC,QAASH,KAAKZ,WAHhB,SAOA,4BACEa,UAAU,SACVC,KAAK,SACLC,QAASH,KAAKX,YAHhB,kBAOA,4BACEY,UAAU,SACVN,MAAOd,EACPuB,SAAUJ,KAAKP,gBAEf,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,wCAGJ,4BACGf,EAAY2B,KAAI,SAAA9B,GAAI,OACnB,kBAAC,EAAD,CAAM+B,IAAK/B,EAAMA,KAAMA,a,GAhGXgC,IAAMC,YA4G9BhC,EAAUiC,aAAe,CACvB7B,KAAM,IAGOJ,QCjHTkC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAqCaC,E,2MAjCblC,MAAQ,CACNmC,WAAW,G,EAGbC,YAAc,WACZ,EAAK9B,UAAS,SAAAC,GAAS,MAAK,CAC1B4B,WAAY5B,EAAU4B,e,wEAIhB,IACAA,EAAcZ,KAAKvB,MAAnBmC,UAER,OACE,yBAAKX,UAAU,OAEXW,EAEI,4BACEV,KAAK,SACLC,QAASH,KAAKa,aAFhB,SAOA,kBAAC,EAAD,CAAWjC,KAAM8B,S,GA1BbH,IAAMC,WCbxBM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0f462636.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Good = ({ good }) => (\n  <li>\n    {good}\n  </li>\n);\n\nGood.propTypes = {\n  good: PropTypes.string.isRequired,\n};\n\nexport default Good;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Good from '../Good/Good';\nimport './Goodslist.css';\n\nclass Goodslist extends React.Component {\n  state = {\n    listOfGoods: [...this.props.list],\n    minLength: 1,\n  }\n\n  reverseSort = () => {\n    this.setState(prevState => ({\n      listOfGoods: prevState.listOfGoods.reverse(),\n    }));\n  }\n\n  alphabeticallySort = () => {\n    this.setState(prevState => ({\n      listOfGoods: prevState.listOfGoods.sort(),\n    }));\n  }\n\n  resetSort = () => {\n    this.setState({\n      listOfGoods: [...this.props.list],\n      minLength: 1,\n    });\n  }\n\n  lengthSort = () => {\n    this.setState(prevState => ({\n      listOfGoods: prevState.listOfGoods.sort((a, b) => (\n        a.length - b.length\n      )),\n    }));\n  }\n\n  selectedLength = (event) => {\n    const { value } = event.target;\n    const currentList = [...this.props.list];\n\n    this.setState(prevState => ({\n      listOfGoods: currentList.filter(item => item.length >= value),\n      minLength: value,\n    }));\n  }\n\n  render() {\n    const { listOfGoods, minLength } = this.state;\n\n    return (\n      <>\n        <div>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.reverseSort}\n          >\n            Reverse\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.alphabeticallySort}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.resetSort}\n          >\n            Reset\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.lengthSort}\n          >\n            Sort by length\n          </button>\n          <select\n            className=\"select\"\n            value={minLength}\n            onChange={this.selectedLength}\n          >\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n            <option>6</option>\n            <option>7</option>\n            <option>8</option>\n            <option>9</option>\n            <option>10</option>\n          </select>\n        </div>\n        <ul>\n          {listOfGoods.map(good => (\n            <Good key={good} good={good} />\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nGoodslist.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.string.isRequired),\n};\n\nGoodslist.defaultProps = {\n  list: [],\n};\n\nexport default Goodslist;\n","import React from 'react';\nimport './App.css';\nimport Goodslist from './components/Goodslist/Goodslist';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isStarted: true,\n  }\n\n  handleStart = () => {\n    this.setState(prevState => ({\n      isStarted: !prevState.isStarted,\n    }));\n  }\n\n  render() {\n    const { isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        {\n          isStarted\n            ? (\n              <button\n                type=\"button\"\n                onClick={this.handleStart}\n              >\n              Start\n              </button>\n            ) : (\n              <Goodslist list={goodsFromServer} />\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}